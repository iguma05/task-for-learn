Задачи к собесам № 2
==============================================================
задачи от Альфа-Банк - 1

https://brainy-emery-451.notion.site/76b35f4e7acf4a83954637d780f0cfd6
===================================================================
задача - 2

https://codesandbox.io/s/new-test-tasks-forked-ifigol?file=/src/1_test-nonRepeating.ts
=====================================================================
задача - 3

https://codesandbox.io/s/stupefied-http-km23fs?file=/src/App.js
=====================================================================
задача -4 

// Нужно написать функцию
// На вход поступает массив чисел. Числа больше либо равны 0 и не повторяются.
// Если числа из исходного массива (не обязательно идущие по порядку)
// образуют непрерывную числовую последовательность, то следует их добавить в
// результат по паттерну 'Начало последотельности - Конец последовательности'
// Если число не входит в последовательность, то добавить его в результат через запятую
// Алгоритмическая сложность должна быть не выше O(n log n)

// Пример:
// Параметр: [9, 0, 6, 8, 2, 5, 4]
// Возвращаемый результат: '0, 2, 4-6, 8-9'
==========================================================================
задача 5 

Задача: Есть робот, который ходит вверх,вниз,вправо,влево. Если робот, к примеру, сходил два раза влево, а потом два раза вправо - он остался на месте, необходимо вычислить исходя из данных куда сходил робот. Пример:
 1) массив [вверх, право, право, лево,лево, вниз] должен вернуть пустой массив, 
 2) массив [вверх, право, право, лево,лево, вниз, вверх] должен вернуть массив [вверх]
 3) массив [вверх, вправо,вниз, влево] вернет тот же массив, так как робот не сделал ненужных шагов
===================================================================================
задача 6 

useDirtyState

import "./styles.css";

// задача: написать кастомный хук useDirtyState
// вначале у которого возвращается isDirty = false
// а если хоть раз применен setState то isDirty = true
// + повесить setState на обработчик клика у increment

const useDirtyState = (initialValue = 0) => {
  return []
};

export default function App() {
  const [state, setState, isDirty] = useDirtyState(0);

  return (
    <div className="App">
      <div>State: {state}</div>
      <div>Is state dirty: {isDirty ? "dirty" : "not dirty"}</div>
      <button>Increment</button>
    </div>
  );
}
=================================================================================
задча 7 - !!!

https://averom.notion.site/averom/JS-Review-86a9f74286484d68a01ccfffded67420

с собеса JS
====================================================
